{
  "projectId": "892ec2fc-6179-412d-8791-274dc77c38c0",
  "revisionString": "1",
  "projectNameDisplay": "MetaMind Insights: Your AI-Powered Research Assistant",
  "userPromptForThisRevision": "Project Title: MetaMind Insights: Your AI-Powered Research Assistant\r\n\r\nApp Type Hint: Utility\r\n\r\nImage Generation Mode: N/A\r\n\r\nTarget Style Preferences: Theme: dark, CSS Framework: bootstrap, JS Structure: vanilla\r\n\r\nDetailed Description:\r\n\r\nCore concept and objective: MetaMind Insights is a web applet designed to simplify research using the MetaMindsSearch Bing Search API. Users input a query, the applet sends the request, receives the structured JSON response, and presents a clean, concise summary with properly attributed sources. The goal is to provide quick, reliable, and easily verifiable information.\r\n\r\nKey features and user interactions: The applet features a simple input field where users enter their search query.  Upon submission, a loading indicator displays. Once the API response is received, the applet displays a clear summary of the findings, generated by the API. Below the summary, a collapsible section reveals a list of source URLs, each with its title and a short snippet of relevant text.  Users can click on each source link to access the original web page. Error handling is incorporated to gracefully manage API request failures (e.g., network issues, invalid queries).  Bootstrap's styling ensures responsiveness and visual appeal.\r\n\r\nPotential \"wow\" factor: The \"wow\" factor stems from the seamless integration of a complex API call into a user-friendly interface. The clear presentation of summarized information with direct links to source material offers a significant improvement over typical search engine results. This empowers users to quickly understand complex topics and verify the accuracy of information, all within a single, visually appealing applet.  The dark theme enhances readability and user experience.\r\n\r\nSpecific technical requirements or suggestions: The applet will use vanilla JavaScript to make the API call via `fetch` or `XMLHttpRequest`.  The JSON response will be parsed and displayed using DOM manipulation. Bootstrap's CSS framework will handle the layout and styling. Error handling will include visual feedback to the user (e.g., displaying an error message if the API request fails). No canvas usage is required.  The focus is on clean data presentation and efficient API interaction.\r\n\r\nGuide for AI: Using the MetaMindsSearch Bing Search API\r\nObjective: To leverage the MetaMindsSearch Bing Search API to perform web searches and retrieve summarized, actionable information along with source URLs.\r\n1. API Endpoint:\r\nURL: http://MetaMindsSearch-dev.eba-q5t7qk5a.us-east-2.elasticbeanstalk.com/api/bing-search\r\n2. HTTP Method:\r\nAlways use the POST method when interacting with this endpoint.\r\n3. Headers:\r\nYou must include the following header in your request:\r\nContent-Type: application/json\r\n4. Request Body:\r\nYour request must contain a JSON object with a single key: query.\r\n\r\n\r\nThe value of query should be a string containing the search term or question you want to investigate.\r\n\r\n\r\nExample Request Body:\r\n\r\n JSON\r\n{\r\n  \"query\": \"What are the latest developments in renewable energy?\"\r\n}\r\n\r\n\r\n5. Response Structure:\r\nThe API will respond with a JSON object. If successful, it will contain the following keys:\r\n\r\n\r\nsearchQuery (string): This will be the original query you sent.\r\nsummary (string): A synthesized summary of the information found across multiple web pages visited. This is often generated by a large language model (like GPT-4o-mini) and aims to provide a concise overview of the key findings.\r\nsources (array): An array of objects, where each object represents a web page that was visited and used to generate the summary. Each source object contains:\r\ntitle (string): The title of the web page.\r\nurl (string): The direct URL of the source page.\r\nsnippet (string): A short extract or beginning of the content found on the page.\r\nExample Response Structure:\r\n\r\n JSON\r\n{\r\n  \"searchQuery\": \"What are the latest developments in renewable energy?\",\r\n  \"summary\": \"Recent developments in renewable energy focus on improved solar panel efficiency, advancements in grid-scale battery storage, and innovations in offshore wind turbine technology...\",\r\n  \"sources\": [\r\n    {\r\n      \"title\": \"Renewable Energy News Today | ScienceHub\",\r\n      \"url\": \"http://example-science.com/renewables\",\r\n      \"snippet\": \"Solar panel efficiency has seen a significant jump, with new perovskite-based cells showing promise...\"\r\n    },\r\n    {\r\n      \"title\": \"Future of Wind Power - Energy.gov\",\r\n      \"url\": \"http://example-gov.com/wind-power\",\r\n      \"snippet\": \"Offshore wind farms are becoming larger and more cost-effective, contributing significantly to green energy targets...\"\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n6. How to Utilize:\r\nIdentify Information Need: Determine the topic or question you need to research.\r\nConstruct Request: Create the JSON payload with your query.\r\nSend Request: Execute an HTTP POST request to the specified URL with the correct headers and body.\r\nParse Response: Process the returned JSON data.\r\nUse Information:\r\nUse the summary to get a quick understanding of the topic.\r\nUse the sources array to:\r\nVerify the information presented in the summary.\r\nProvide attribution when presenting the information.\r\nNavigate for deeper investigation if required.\r\n\r\n",
  "basedOnRevisionString": null,
  "savedAt": "2025-05-28T11:40:47.627Z",
  "imageAssets": []
}